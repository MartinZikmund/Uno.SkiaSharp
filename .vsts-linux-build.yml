jobs:
- job: Linux
  container: nventive/wasm-build:1.4.1

  pool:
    vmImage: 'ubuntu-16.04'

  variables:
    NUGET_PACKAGES: $(build.sourcesdirectory)/.nuget
    EMSCRIPTEN_VERSION: 1.39.7

  steps:
  - checkout: self
    clean: true
  
  - bash: |
      cd ~
      echo Installing emscripten $(EMSCRIPTEN_VERSION)
      git clone https://github.com/emscripten-core/emsdk
      cd ~/emsdk
      ./emsdk install $(EMSCRIPTEN_VERSION)
      ./emsdk activate $(EMSCRIPTEN_VERSION)

    displayName: 'Setup Emscripten'

  - bash: |
      cd ~/emsdk
      wget https://raw.githubusercontent.com/mono/mono/27247739c68faee7b2a63ae805222d4b375d2161/sdks/builds/emscripten-pr-8457.diff
      wget https://raw.githubusercontent.com/mono/mono/27247739c68faee7b2a63ae805222d4b375d2161/sdks/builds/fix-emscripten-8511.diff
      cd ~/emsdk/upstream/emscripten
      patch -N -p1 < ~/emsdk/emscripten-pr-8457.diff
      patch -N -p1 < ~/emsdk/fix-emscripten-8511.diff

    displayName: 'Apply Emscripten Mono patches'

  - bash: |
      chmod +x scripts/wasm-uitest-run.sh
      scripts/wasm-uitest-run.sh

    env:
      GIT_TARGETBRANCH: "$(System.PullRequest.TargetBranch)"
      GIT_SOURCEBRANCH: "$(Build.SourceBranch)"
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"
      BUILD_ARTIFACTSTAGINGDIRECTORY: "$(build.artifactstagingdirectory)"

    displayName: 'Running build'

  - task: CopyFiles@2
    displayName: 'Publish Wasm Binaries'
    inputs:
      SourceFolder: $(build.sourcesdirectory)/source/SkiaSharpSample/SkiaSharpSample.Wasm/bin/Release/netstandard2.0/dist
      Contents: '**/*.*'
      TargetFolder: $(build.artifactstagingdirectory)/skiasharp-wasm
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false
      
  - task: PublishTestResults@2
    condition: always()
    inputs:
      testRunTitle: 'WebAssembly Test Run'
      testResultsFormat: 'NUnit'
      testResultsFiles: '$(build.sourcesdirectory)/scripts/TestResult.xml'

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: skiasharp-aot-drop
      ArtifactType: Container
